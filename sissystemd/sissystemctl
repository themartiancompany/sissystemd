#!/usr/bin/env bash

_bin="$( \
  dirname \
    "$( \
      command \
        -v \
	  "env")")"
_lib="${_bin}/../lib"
source \
  "${_lib}/libcrash-bash/crash-bash"

# shellcheck disable=SC2034
_global_variables() {
  systemctl_command=""
  systemctl_opts=()
  color=""
  quiet=""
}

_sissystemctl() {
  local \
    _command="${1}" \
    _opts=() \
    _systemctl
  shift \
    1
  _opts=(
    "$@"
  )
  _systemctl="$( \
    command \
      -v \
        "systemctl")"
  [[ "${_systemctl}" != "" ]] && \
    "${_systemctl}" \
      "${_opts[@]}"
}

# Set defaults
_set_overrides() {
  if [[ -v override_color ]]; then
    color="${override_color}"
  elif [[ -z "${color}" ]]; then
    color="n"
  fi
  if [[ -v override_quiet ]]; then
    quiet="${override_quiet}"
  elif [[ -z "${quiet}" ]]; then
    quiet="y"
  fi
}

# Show help usage, with an exit status.
# $1: exit status number.
_usage() {
  local \
    _usage_text
  IFS='' \
    read \
      -r \
      -d '' \
      _usage_text << \
        ENDUSAGETEXT || true
Use as systemctl

Usage:
  $(_get "app" "name")
    [options]
    <command>
      [command options]
  options:
     -h                   This message.
     -v                   Enable verbose output
ENDUSAGETEXT
  _printf \
    '%s\n' \
    "${_usage_text}"
  exit \
    "${1}"
}

_globals
_global_variables
_requirements
# shellcheck disable=SC2004
# shellcheck disable=SC2034
while \
  getopts \
    'cvh?' \
    arg; do
  case \
    "${arg}" in
    c) override_color="y" ;;
    v) override_quiet="n" ;;
    h|?) _set_overrides && \
         _usage \
           0 ;;
    *)
    _msg_error \
      "Invalid argument '${arg}'" \
      0
    _usage \
      1
    ;;
  esac
done
shift \
  $(( \
    OPTIND - 1 \
  ))
(( ${#} < 1 )) && \
  _usage \
    1
_command="${1}"
shift \
  1
_systemctl_opts=(
  "$@"
)
_set_overrides
_sissystemctl \
  "${systemctl_command}" \
  "${systemctl_opts[@]}"
